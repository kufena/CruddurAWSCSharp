version: "3.8"
services:
  frontend-react-js:
    environment:
      REACT_APP_BACKEND_URL: "http://localhost"
      REACT_APP_AWS_PROJECT_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_COGNITO_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_USER_POOLS_ID: "${AWS_USER_POOL_ID}"
      REACT_APP_AWS_CLIENT_ID: "${AWS_CLIENT_ID}"

    build: ./frontend-react-js
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-react-js:/frontend-react-js
#  xray-daemon:
#    image: "amazon/aws-xray-daemon"
#    environment:
#      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
#      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
#      AWS_REGION: "eu-west-2"
#    command:
#      - "xray -o -b xray-daemon:2000"
#    ports:
#      - 2000:2000/udp
#  db:
#    image: postgres:13-alpine
#    restart: always
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=password
#    ports:
#      - '5432:5432'
#    volumes: 
#      - db:/var/lib/postgresql/data  
#  dynamodb-local:
    # https://stackoverflow.com/questions/67533058/persist-local-dynamodb-data-in-volumes-lack-permission-unable-to-open-databa
    # We needed to add user:root to get this working.
#    user: root
#    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
#    image: "amazon/dynamodb-local:latest"
#    container_name: dynamodb-local
#    ports:
#      - "8000:8000"
#    volumes:
#      - "./docker/dynamodb:/home/dynamodblocal/data"
#    working_dir: /home/dynamodblocal
  
#volumes: 
#  - "./docker/dynamodb:/home/dynamodblocal/data"

#volumes: 
#  - db:/var/lib/postgresql/data

volumes:
  db:
    driver: local
# the name flag is a hack to change the default prepend folder
# name when outputting the image names
networks: 
  internal-network:
    driver: bridge
    name: cruddur